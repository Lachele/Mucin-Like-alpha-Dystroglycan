%!PS-Adobe-2.0
%%Title: RMSD_All_sug-bak_12.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Dec 31 02:37:18 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (RMSD_All_sug-bak_12.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (lachele)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Dec 31 02:37:18 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
740 640 M
63 0 V
5936 0 R
-63 0 V
stroke
620 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
740 1115 M
63 0 V
5936 0 R
-63 0 V
stroke
620 1115 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
740 1590 M
63 0 V
5936 0 R
-63 0 V
stroke
620 1590 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
1.000 UL
LTb
740 2065 M
63 0 V
5936 0 R
-63 0 V
stroke
620 2065 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3)]
] -66.7 MRshow
1.000 UL
LTb
740 2540 M
63 0 V
5936 0 R
-63 0 V
stroke
620 2540 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MRshow
1.000 UL
LTb
740 3014 M
63 0 V
5936 0 R
-63 0 V
stroke
620 3014 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
740 3489 M
63 0 V
5936 0 R
-63 0 V
stroke
620 3489 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MRshow
1.000 UL
LTb
740 3964 M
63 0 V
5936 0 R
-63 0 V
stroke
620 3964 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 7)]
] -66.7 MRshow
1.000 UL
LTb
740 4439 M
63 0 V
5936 0 R
-63 0 V
stroke
620 4439 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8)]
] -66.7 MRshow
1.000 UL
LTb
740 640 M
0 63 V
0 3736 R
0 -63 V
stroke
740 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1490 640 M
0 63 V
0 3736 R
0 -63 V
stroke
1490 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
1.000 UL
LTb
2240 640 M
0 63 V
0 3736 R
0 -63 V
stroke
2240 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
1.000 UL
LTb
2990 640 M
0 63 V
0 3736 R
0 -63 V
stroke
2990 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MCshow
1.000 UL
LTb
3740 640 M
0 63 V
0 3736 R
0 -63 V
stroke
3740 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
4489 640 M
0 63 V
0 3736 R
0 -63 V
stroke
4489 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MCshow
1.000 UL
LTb
5239 640 M
0 63 V
0 3736 R
0 -63 V
stroke
5239 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MCshow
1.000 UL
LTb
5989 640 M
0 63 V
0 3736 R
0 -63 V
stroke
5989 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 35)]
] -66.7 MCshow
1.000 UL
LTb
6739 640 M
0 63 V
0 3736 R
0 -63 V
stroke
6739 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
740 4439 N
740 640 L
5999 0 V
0 3799 V
-5999 0 V
Z stroke
LCb setrgbcolor
160 2539 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Average RMSD with RMS\(RMSD\) fluctuations)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3739 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Initial NMR Structure Number)]
] -66.7 MCshow
LTb
3739 4739 M
[ [(Helvetica) 200.0 0.0 true true 0 (Glycan ring RMSD after aligning THR's CA,C,O,N,H)]
] -66.7 MCshow
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
5836 1003 M
[ [(Helvetica) 200.0 0.0 true true 0 (GalNAc 1)]
] -66.7 MRshow
LT0
5956 1003 M
543 0 V
-543 31 R
0 -62 V
543 62 R
0 -62 V
852 966 M
0 937 V
821 966 M
62 0 V
-62 937 R
62 0 V
119 -744 R
0 1090 V
971 1159 M
62 0 V
971 2249 M
62 0 V
1152 1052 M
0 1102 V
1121 1052 M
62 0 V
-62 1102 R
62 0 V
1302 1122 M
0 1080 V
1271 1122 M
62 0 V
-62 1080 R
62 0 V
1452 982 M
0 931 V
1421 982 M
62 0 V
-62 931 R
62 0 V
1602 971 M
0 947 V
1571 971 M
62 0 V
-62 947 R
62 0 V
119 -888 R
0 871 V
-31 -871 R
62 0 V
-62 871 R
62 0 V
119 -711 R
0 1038 V
1871 1190 M
62 0 V
-62 1038 R
62 0 V
2052 999 M
0 892 V
2021 999 M
62 0 V
-62 892 R
62 0 V
119 -820 R
0 1121 V
2171 1071 M
62 0 V
-62 1121 R
62 0 V
2352 1175 M
0 1073 V
2321 1175 M
62 0 V
-62 1073 R
62 0 V
2502 1180 M
0 1078 V
2471 1180 M
62 0 V
-62 1078 R
62 0 V
2652 1049 M
0 1098 V
2621 1049 M
62 0 V
-62 1098 R
62 0 V
2802 1075 M
0 1129 V
2771 1075 M
62 0 V
-62 1129 R
62 0 V
2952 1086 M
0 1089 V
2921 1086 M
62 0 V
-62 1089 R
62 0 V
3102 1039 M
0 877 V
-31 -877 R
62 0 V
-62 877 R
62 0 V
852 1434 Pls
1002 1704 Pls
1152 1603 Pls
1302 1662 Pls
1452 1448 Pls
1602 1444 Pls
1752 1466 Pls
1902 1709 Pls
2052 1445 Pls
2202 1632 Pls
2352 1712 Pls
2502 1719 Pls
2652 1598 Pls
2802 1640 Pls
2952 1630 Pls
3102 1478 Pls
6227 1003 Pls
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT1
LCb setrgbcolor
5836 803 M
[ [(Helvetica) 200.0 0.0 true true 0 (Man 1)]
] -66.7 MRshow
LT1
5956 803 M
543 0 V
-543 31 R
0 -62 V
543 62 R
0 -62 V
890 1818 M
0 1511 V
859 1818 M
62 0 V
859 3329 M
62 0 V
1040 2030 M
0 1612 V
1009 2030 M
62 0 V
-62 1612 R
62 0 V
1190 2243 M
0 1634 V
1159 2243 M
62 0 V
-62 1634 R
62 0 V
1340 1884 M
0 2120 V
1309 1884 M
62 0 V
-62 2120 R
62 0 V
1490 1868 M
0 1630 V
1459 1868 M
62 0 V
-62 1630 R
62 0 V
1640 1529 M
0 2047 V
1609 1529 M
62 0 V
-62 2047 R
62 0 V
1790 1673 M
0 1867 V
1759 1673 M
62 0 V
-62 1867 R
62 0 V
1940 1903 M
0 1902 V
1909 1903 M
62 0 V
-62 1902 R
62 0 V
2090 1691 M
0 1567 V
2059 1691 M
62 0 V
-62 1567 R
62 0 V
2240 1656 M
0 1979 V
2209 1656 M
62 0 V
-62 1979 R
62 0 V
2390 1841 M
0 1694 V
2359 1841 M
62 0 V
-62 1694 R
62 0 V
2540 1820 M
0 1635 V
2509 1820 M
62 0 V
-62 1635 R
62 0 V
2690 1423 M
0 1943 V
2659 1423 M
62 0 V
-62 1943 R
62 0 V
2840 1807 M
0 1413 V
2809 1807 M
62 0 V
-62 1413 R
62 0 V
2990 1687 M
0 1964 V
2959 1687 M
62 0 V
-62 1964 R
62 0 V
3140 2186 M
0 1620 V
3109 2186 M
62 0 V
-62 1620 R
62 0 V
3290 1844 M
0 1362 V
3259 1844 M
62 0 V
stroke 3321 1844 M
-62 1362 R
62 0 V
3440 1664 M
0 1577 V
3409 1664 M
62 0 V
-62 1577 R
62 0 V
3590 1939 M
0 2108 V
3559 1939 M
62 0 V
-62 2108 R
62 0 V
3740 1607 M
0 1674 V
3709 1607 M
62 0 V
-62 1674 R
62 0 V
3889 1889 M
0 2091 V
3858 1889 M
62 0 V
-62 2091 R
62 0 V
4039 1796 M
0 1511 V
4008 1796 M
62 0 V
-62 1511 R
62 0 V
4189 1734 M
0 1862 V
4158 1734 M
62 0 V
-62 1862 R
62 0 V
4339 1936 M
0 1830 V
4308 1936 M
62 0 V
-62 1830 R
62 0 V
4489 1933 M
0 1850 V
4458 1933 M
62 0 V
-62 1850 R
62 0 V
4639 1892 M
0 1424 V
4608 1892 M
62 0 V
-62 1424 R
62 0 V
4789 1881 M
0 1585 V
4758 1881 M
62 0 V
-62 1585 R
62 0 V
4939 1987 M
0 1498 V
4908 1987 M
62 0 V
-62 1498 R
62 0 V
5089 1575 M
0 1909 V
5058 1575 M
62 0 V
-62 1909 R
62 0 V
5239 2019 M
0 1598 V
5208 2019 M
62 0 V
-62 1598 R
62 0 V
5389 1967 M
0 2062 V
5358 1967 M
62 0 V
-62 2062 R
62 0 V
5539 1776 M
0 1445 V
5508 1776 M
62 0 V
-62 1445 R
62 0 V
5689 1884 M
0 2120 V
5658 1884 M
62 0 V
-62 2120 R
62 0 V
5839 1873 M
0 2131 V
5808 1873 M
62 0 V
-62 2131 R
62 0 V
stroke 5870 4004 M
5989 1815 M
0 2194 V
5958 1815 M
62 0 V
-62 2194 R
62 0 V
6139 1739 M
0 1461 V
6108 1739 M
62 0 V
-62 1461 R
62 0 V
890 2574 Crs
1040 2836 Crs
1190 3060 Crs
1340 2944 Crs
1490 2683 Crs
1640 2553 Crs
1790 2606 Crs
1940 2854 Crs
2090 2475 Crs
2240 2645 Crs
2390 2688 Crs
2540 2638 Crs
2690 2395 Crs
2840 2514 Crs
2990 2669 Crs
3140 2996 Crs
3290 2525 Crs
3440 2452 Crs
3590 2993 Crs
3740 2444 Crs
3889 2934 Crs
4039 2551 Crs
4189 2665 Crs
4339 2851 Crs
4489 2858 Crs
4639 2604 Crs
4789 2673 Crs
4939 2736 Crs
5089 2529 Crs
5239 2818 Crs
5389 2998 Crs
5539 2498 Crs
5689 2944 Crs
5839 2938 Crs
5989 2912 Crs
6139 2470 Crs
6227 803 Crs
% End plot #2
1.000 UL
LTb
740 4439 N
740 640 L
5999 0 V
0 3799 V
-5999 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
