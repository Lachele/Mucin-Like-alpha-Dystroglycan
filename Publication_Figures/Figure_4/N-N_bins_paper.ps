%!PS-Adobe-2.0
%%Title: N-N_bins_paper.ps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Sat Nov 28 06:10:35 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (N-N_bins_paper.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Nov 28 06:10:35 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
1100 640 M
63 0 V
5676 0 R
-63 0 V
stroke
980 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
/Helvetica findfont 200 scalefont setfont
/vshift -66 def
1.000 UL
LTb
LCb setrgbcolor
1100 1480 M
63 0 V
5676 0 R
-63 0 V
stroke
980 1480 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.01)]
] -66.7 MRshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1100 2320 M
63 0 V
5676 0 R
-63 0 V
stroke
980 2320 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.02)]
] -66.7 MRshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1100 3159 M
63 0 V
5676 0 R
-63 0 V
stroke
980 3159 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.03)]
] -66.7 MRshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1100 3999 M
63 0 V
5676 0 R
-63 0 V
stroke
980 3999 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.04)]
] -66.7 MRshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1100 4839 M
63 0 V
5676 0 R
-63 0 V
stroke
980 4839 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.05)]
] -66.7 MRshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1100 640 M
0 63 V
0 4136 R
0 -63 V
stroke
1100 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1920 640 M
0 63 V
0 4136 R
0 -63 V
stroke
1920 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2740 640 M
0 63 V
0 4136 R
0 -63 V
stroke
2740 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3560 640 M
0 63 V
0 4136 R
0 -63 V
stroke
3560 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4379 640 M
0 63 V
0 4136 R
0 -63 V
stroke
4379 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5199 640 M
0 63 V
0 4136 R
0 -63 V
stroke
5199 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 12)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6019 640 M
0 63 V
0 4136 R
0 -63 V
stroke
6019 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 14)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6839 640 M
0 63 V
0 4136 R
0 -63 V
stroke
6839 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 16)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1100 4839 N
0 -4199 V
5739 0 V
0 4199 V
-5739 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
190 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Fraction of Simulated Population)]
] -66.7 MCshow
grestore
/Helvetica findfont 200 scalefont setfont
LTb
LCb setrgbcolor
3969 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (N\(THR3\) to N\(LYS7\) Distance, Angstroms)]
] -66.7 MCshow
/Helvetica findfont 200 scalefont setfont
LTb
% Begin plot #1
3.500 UL
LTb
1.00 0.00 0.00 C
LCb setrgbcolor
2003 4676 M
[ [(Helvetica) 200.0 0.0 true true 0 (N-acetyl Galactosylated Peptide)]
] -66.7 MLshow
/Helvetica findfont 200 scalefont setfont
3.500 UL
LTb
1.00 0.00 0.00 C
1340 4676 M
543 0 V
2861 640 M
34 0 R
35 0 R
34 0 R
35 0 R
35 0 R
34 0 R
0 1 V
35 -1 R
0 1 V
34 -1 R
0 1 V
35 -1 R
0 1 V
35 -1 R
0 2 V
34 -2 R
0 4 V
35 -4 R
0 4 V
35 -4 R
0 4 V
34 -4 R
0 4 V
35 -4 R
0 7 V
34 -7 R
0 10 V
35 -10 R
0 10 V
35 -10 R
0 10 V
34 -10 R
0 9 V
35 -9 R
0 9 V
35 -9 R
0 13 V
34 -13 R
0 14 V
35 -14 R
0 12 V
34 -12 R
0 10 V
35 -10 R
0 9 V
35 -9 R
0 13 V
34 -13 R
0 21 V
35 -21 R
0 19 V
34 -19 R
0 24 V
35 -24 R
0 31 V
35 -31 R
0 36 V
34 -36 R
0 42 V
35 -42 R
0 40 V
35 -40 R
0 52 V
34 -52 R
0 50 V
35 -50 R
0 56 V
34 -56 R
0 66 V
35 -66 R
0 66 V
35 -66 R
0 70 V
34 -70 R
0 73 V
35 -73 R
0 85 V
35 -85 R
0 88 V
34 -88 R
0 101 V
35 -101 R
0 110 V
34 -110 R
0 139 V
35 -139 R
0 157 V
35 -157 R
0 179 V
34 -179 R
0 200 V
35 -200 R
0 235 V
34 -235 R
0 298 V
35 -298 R
0 336 V
35 -336 R
0 387 V
34 -387 R
0 498 V
35 -498 R
0 580 V
35 -580 R
0 669 V
34 -669 R
0 794 V
35 -794 R
0 935 V
34 -935 R
0 1073 V
4903 640 M
0 1290 V
4938 640 M
0 1475 V
4972 640 M
0 1587 V
5007 640 M
0 1794 V
5042 640 M
0 1892 V
5076 640 M
0 2047 V
5111 640 M
0 2143 V
5145 640 M
0 2170 V
5180 640 M
0 2303 V
5215 640 M
0 2386 V
5249 640 M
0 2567 V
5284 640 M
0 2770 V
5318 640 M
0 3088 V
5353 640 M
0 3321 V
5388 640 M
0 3497 V
5422 640 M
0 3776 V
5457 640 M
0 3837 V
5492 640 M
0 3997 V
5526 640 M
0 3979 V
5561 640 M
0 3807 V
5595 640 M
0 3583 V
5630 640 M
0 3288 V
5665 640 M
0 2969 V
5699 640 M
0 2557 V
5734 640 M
0 2192 V
5769 640 M
0 1812 V
5803 640 M
0 1516 V
5838 640 M
0 1223 V
5872 640 M
0 942 V
35 -942 R
0 743 V
35 -743 R
0 529 V
34 -529 R
0 401 V
35 -401 R
0 283 V
34 -283 R
0 187 V
35 -187 R
0 139 V
35 -139 R
0 100 V
34 -100 R
0 68 V
35 -68 R
0 36 V
35 -36 R
0 16 V
34 -16 R
0 10 V
35 -10 R
0 2 V
% End plot #1
% Begin plot #2
stroke
3.250 UL
LTb
0.00 1.00 0.00 C
LCb setrgbcolor
2003 4476 M
[ [(Helvetica) 200.0 0.0 true true 0 (Mannosylated Peptide)]
] -66.7 MLshow
/Helvetica findfont 200 scalefont setfont
3.250 UL
LTb
0.00 1.00 0.00 C
1340 4476 M
543 0 V
2044 640 M
43 0 R
44 0 R
0 1 V
43 -1 R
44 0 R
0 3 V
43 -3 R
0 4 V
43 -4 R
0 4 V
44 -4 R
0 3 V
43 -3 R
0 6 V
44 -6 R
0 5 V
43 -5 R
0 11 V
44 -11 R
0 24 V
43 -24 R
0 24 V
43 -24 R
0 38 V
44 -38 R
0 62 V
43 -62 R
0 101 V
44 -101 R
0 156 V
43 -156 R
0 224 V
43 -224 R
0 306 V
44 -306 R
0 412 V
43 -412 R
0 480 V
44 -480 R
0 477 V
43 -477 R
0 392 V
43 -392 R
0 282 V
44 -282 R
0 229 V
43 -229 R
0 201 V
44 -201 R
0 200 V
43 -200 R
0 214 V
43 -214 R
0 270 V
44 -270 R
0 302 V
43 -302 R
0 379 V
44 -379 R
0 475 V
43 -475 R
0 551 V
43 -551 R
0 598 V
44 -598 R
0 631 V
43 -631 R
0 624 V
44 -624 R
0 649 V
43 -649 R
0 688 V
43 -688 R
0 746 V
44 -746 R
0 805 V
43 -805 R
0 874 V
44 -874 R
0 932 V
43 -932 R
0 950 V
43 -950 R
0 1024 V
3954 640 M
0 1018 V
3997 640 M
0 1004 V
4041 640 M
0 1018 V
4084 640 M
0 1024 V
4127 640 M
0 1028 V
4171 640 M
0 1018 V
4214 640 M
0 1059 V
4258 640 M
0 1056 V
4301 640 M
0 1072 V
4344 640 M
0 1092 V
4388 640 M
0 1159 V
4431 640 M
0 1166 V
4475 640 M
0 1255 V
4518 640 M
0 1328 V
4561 640 M
0 1457 V
4605 640 M
0 1527 V
4648 640 M
0 1589 V
4692 640 M
0 1656 V
4735 640 M
0 1731 V
4778 640 M
0 1774 V
4822 640 M
0 1794 V
4865 640 M
0 1896 V
4909 640 M
0 1935 V
4952 640 M
0 1927 V
4995 640 M
0 1937 V
5039 640 M
0 1953 V
5082 640 M
0 1952 V
5126 640 M
0 2026 V
5169 640 M
0 2033 V
5212 640 M
0 2109 V
5256 640 M
0 2091 V
5299 640 M
0 2167 V
5343 640 M
0 2290 V
5386 640 M
0 2307 V
5429 640 M
0 2309 V
5473 640 M
0 2272 V
5516 640 M
0 2077 V
5560 640 M
0 1870 V
5603 640 M
0 1555 V
5646 640 M
0 1335 V
5690 640 M
0 1082 V
5733 640 M
0 870 V
44 -870 R
0 673 V
43 -673 R
0 548 V
43 -548 R
0 406 V
44 -406 R
0 295 V
43 -295 R
0 226 V
44 -226 R
0 167 V
43 -167 R
0 125 V
43 -125 R
0 99 V
44 -99 R
0 86 V
43 -86 R
0 73 V
44 -73 R
0 55 V
43 -55 R
0 31 V
43 -31 R
0 10 V
44 -10 R
0 4 V
% End plot #2
% Begin plot #3
stroke
2.000 UL
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
2003 4276 M
[ [(Helvetica) 200.0 0.0 true true 0 (Unglycosylated Peptide)]
] -66.7 MLshow
/Helvetica findfont 200 scalefont setfont
2.000 UL
LTb
0.00 0.00 1.00 C
1340 4276 M
543 0 V
1624 640 M
48 0 R
47 0 R
0 4 V
47 -4 R
0 14 V
47 -14 R
0 43 V
47 -43 R
0 113 V
47 -113 R
0 235 V
47 -235 R
0 407 V
47 -407 R
0 597 V
48 -597 R
0 797 V
47 -797 R
0 871 V
47 -871 R
0 909 V
47 -909 R
0 891 V
47 -891 R
0 908 V
47 -908 R
0 938 V
47 -938 R
0 955 V
47 -955 R
0 860 V
48 -860 R
0 723 V
47 -723 R
0 574 V
47 -574 R
0 510 V
47 -510 R
0 471 V
47 -471 R
0 483 V
47 -483 R
0 539 V
47 -539 R
0 640 V
48 -640 R
0 821 V
47 -821 R
0 1040 V
2850 640 M
0 1262 V
2897 640 M
0 1435 V
2944 640 M
0 1509 V
2991 640 M
0 1482 V
3038 640 M
0 1390 V
3085 640 M
0 1362 V
3133 640 M
0 1326 V
3180 640 M
0 1349 V
3227 640 M
0 1342 V
3274 640 M
0 1338 V
3321 640 M
0 1357 V
3368 640 M
0 1455 V
3415 640 M
0 1566 V
3462 640 M
0 1717 V
3510 640 M
0 1751 V
3557 640 M
0 1778 V
3604 640 M
0 1783 V
3651 640 M
0 1754 V
3698 640 M
0 1744 V
3745 640 M
0 1700 V
3792 640 M
0 1701 V
3840 640 M
0 1650 V
3887 640 M
0 1678 V
3934 640 M
0 1652 V
3981 640 M
0 1690 V
4028 640 M
0 1670 V
4075 640 M
0 1643 V
4122 640 M
0 1630 V
4169 640 M
0 1559 V
4217 640 M
0 1462 V
4264 640 M
0 1377 V
4311 640 M
0 1300 V
4358 640 M
0 1236 V
4405 640 M
0 1139 V
4452 640 M
0 1113 V
4499 640 M
0 1082 V
4546 640 M
0 1052 V
4594 640 M
0 1062 V
4641 640 M
0 1036 V
4688 640 M
0 1021 V
4735 640 M
0 1022 V
4782 640 M
0 998 V
47 -998 R
0 962 V
47 -962 R
0 918 V
48 -918 R
0 857 V
47 -857 R
0 810 V
47 -810 R
0 751 V
47 -751 R
0 687 V
47 -687 R
0 618 V
47 -618 R
0 558 V
47 -558 R
0 486 V
47 -486 R
0 433 V
48 -433 R
0 375 V
47 -375 R
0 327 V
47 -327 R
0 296 V
47 -296 R
0 263 V
47 -263 R
0 227 V
47 -227 R
0 193 V
47 -193 R
0 164 V
47 -164 R
0 132 V
48 -132 R
0 106 V
47 -106 R
0 86 V
47 -86 R
0 62 V
47 -62 R
0 52 V
47 -52 R
0 32 V
47 -32 R
0 26 V
47 -26 R
0 17 V
48 -17 R
0 12 V
47 -12 R
0 5 V
47 -5 R
0 4 V
47 -4 R
0 1 V
47 -1 R
0 2 V
47 -2 R
0 1 V
47 -1 R
% End plot #3
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1100 4839 N
0 -4199 V
5739 0 V
0 4199 V
-5739 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
